# Copy this file to `.env` to activate it.
# The given values in this file are the defaults.



# Port where the frontend app would run
VITE_APP_PORT=3000

# Set to 'true' if the dev app is supposed to be run in a browser BUT
# embedded into an iframe via the AP-loader application (see: https://bitbucket.org/KNIME/knime-hub-ap-loader/src/master/)
# Note that the VITE_BROWSER_DEV_WS_URL variable *must* also be set. See the README on the ap-loader repository for details
# on its setup
VITE_BROWSER_DEV_MODE_EMBEDDED = false

# The URL of AP's gateway websocket and http server; will have no effect if AP is running on desktop; required for the browser AP
#VITE_BROWSER_DEV_WS_URL="ws://localhost:7000"
#VITE_BROWSER_DEV_HTTP_URL="http://localhost:7000"

# Port used for the dev mode open inspector button on the top right, defaults to 8888
#KNIME_CEF_REMOTE_DEBUGGING_PORT="8888"

# Set the log level
# VITE_LOG_LEVEL=verbose

# Enable canvas debug mode. Only for the WebGL canvas
# VITE_CANVAS_DEBUG=false

#### HUB ENVIRONMENT ####
# For the upload in Space Explorer feature, while on the browse
# the app needs to make requests to the hub api.
# However, during development this doesn't work very well due to CORS and auth issues,
# because knime-ui does not implement (nor should) direct authentication against the hub.
# We can bypass this during development by making use of an application password
#
# See: https://hubdev.knime.com/<YOUR_HUBDEV_USER>/settings/application-passwords
#
# VITE_HUB_API_URL=https://api.hubdev.knime.com
# The application password id
# VITE_HUB_AUTH_USER=XXX
# The application password
# VITE_HUB_AUTH_PASS=XXX
